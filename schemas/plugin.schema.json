{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/untrustedmodders/plugify/main/schemas/plugin.schema.json",
  "type": "object",
  "description": "A plugin for Plugify.",
  "title": "Plugin",
  "required": [
    "fileVersion",
    "version",
    "friendlyName",
    "entryPoint",
    "languageModule"
  ],
  "properties": {
    "fileVersion": {
      "type": "number",
      "description": "The version number of the configuration file format.",
      "minimum": 1
    },
    "version": {
      "type": "string",
      "description": "The semantic version of the plugin.",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "minLength": 1
    },
    "friendlyName": {
      "type": "string",
      "description": "A user-friendly name for the plugin.",
      "minLength": 1
    },
    "description": {
      "type": "string",
      "description": " A brief description or overview of the plugin."
    },
    "createdBy": {
      "type": "string",
      "description": "The creator or author of the plugin."
    },
    "createdByURL": {
      "type": "string",
      "description": "The URL linking to the creator's profile or information.",
      "pattern": "https?://(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)"
    },
    "docsURL": {
      "type": "string",
      "description": "The URL linking to the documentation for the plugin.",
      "pattern": "https?://(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)"
    },
    "downloadURL": {
      "type": "string",
      "description": "The URL for downloading the plugin, typically a release package or ZIP file.",
      "pattern": "https?://(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)"
    },
    "updateURL": {
      "type": "string",
      "description": "The URL for checking and fetching updates for the plugin.",
      "pattern": "https?://(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)"
    },
    "entryPoint": {
      "type": "string",
      "description": "The entry point or main executable for the plugin.",
      "minLength": 1
    },
    "supportedPlatforms": {
      "type": "array",
      "description": "An array listing the platforms supported by the plugin.",
      "items": {
        "type": "string",
        "description": "Platform name.",
        "enum": ["windows", "linux", "apple", "bsd", "orbis", "prospero", "switch"]
      }
    },
    "languageModule": {
      "type": "object",
      "description": "Information about the programming language module used.",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Language name.",
          "pattern": "^(?!plugin$).*",
          "minLength": 1,
          "examples": [
            "cpp",
            "csharp",
            "python",
            "javascript"
          ]
        },
        "version": {
          "type": "string",
          "description": "The version of the language module.",
          "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
          "minLength": 1
        }
      }
    },
    "dependencies": {
      "type": "array",
      "description": "A list of plugin references specifying the dependencies required for the plugin.",
      "items": {
        "type": "object",
        "description": "Describes the properties of a plugin dependency.",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the plugin reference.",
            "minLength": 1
          },
          "optional": {
            "type": "boolean",
            "description": "Indicates whether the plugin reference is optional."
          },
          "supportedPlatforms": {
            "type": "array",
            "description": "The platforms supported by the plugin reference.",
            "items": {
              "type": "string",
              "description": "Platform name.",
              "enum": ["windows", "linux", "apple", "bsd", "orbis", "prospero", "switch"]
            }
          },
          "version": {
            "type": "string",
            "description": "The version of the plugin reference.",
            "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "minLength": 1
          }
        }
      }
    },
    "exportedMethods": {
      "type": "array",
      "description": "An array describing functions/methods exposed by the plugin.",
      "items": {
        "$ref": "#/$defs/exportedMethod"
      }
    }
  },
  "$defs": {
    "exportedMethod": {
      "type": "object",
      "description": "An object describing single function/method exposed by the plugin.",
      "required": [
        "name",
        "funcName",
        "paramTypes",
        "retType"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Function name to export to the other plugins.",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "minLength": 1
        },
        "group": {
          "type": "string",
          "description": "Function's group for documentation."
        },
        "description": {
          "type": "string",
          "description": "Function's description for documentation."
        },
        "funcName": {
          "type": "string",
          "description": "Internal function name in plugin's assembly.",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "minLength": 1
        },
        "paramTypes": {
          "type": "array",
          "description": "Parameters list.",
          "items": {
            "type": "object",
            "description": "Parameter's information.",
            "required": [
              "name",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Parameter's type.",
                "enum": ["void", "bool", "char8", "char16", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "ptr64", "ptr32", "float", "double", "function", "string", "any", "bool[]", "char8[]", "char16[]", "int8[]", "int16[]", "int32[]", "int64[]", "uint8[]", "uint16[]", "uint32[]", "uint64[]", "ptr64[]", "float[]", "double[]", "string[]", "any[]", "vec2[]", "vec3[]", "vec4[]", "mat4x4[]", "vec2", "vec3", "vec4", "mat4x4"]
              },
              "name": {
                "type": "string",
                "description": "Parameter's name for generator.",
                "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                "minLength": 1
              },
              "description": {
                "type": "string",
                "description": "Parameter's description for documentation."
              },
              "prototype": {
                "type": "object",
                "description": "An object describing function prototype.",
                "$ref": "#/$defs/exportedMethod"
              },
              "enum": {
                "type": "object",
                "description": "An object describing enum structure.",
                "$ref": "#/$defs/enumObject"
              },
              "default": {
                "type": ["string", "number", "boolean"],
                "description": "Default value for the parameter.",
                "examples": ["defaultValue", 42, true]
              }
            }
          }
        },
        "retType": {
          "type": "object",
          "description": "Return's information.",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Return's type.",
              "enum": ["void", "bool", "char8", "char16", "int8", "int16", "int32", "int64", "uint8", "uint16", "uint32", "uint64", "ptr64", "ptr32", "float", "double", "function", "string", "any", "bool[]", "char8[]", "char16[]", "int8[]", "int16[]", "int32[]", "int64[]", "uint8[]", "uint16[]", "uint32[]", "uint64[]", "ptr64[]", "float[]", "double[]", "string[]", "any[]", "vec2[]", "vec3[]", "vec4[]", "mat4x4[]", "vec2", "vec3", "vec4", "mat4x4"]
            },
            "name": {
              "type": "string",
              "description": "Return's name for generator.",
              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
              "minLength": 1
            },
            "description": {
              "type": "string",
              "description": "Return's description for documentation."
            },
            "prototype": {
              "type": "object",
              "description": "An object describing function prototype.",
              "$ref": "#/$defs/exportedMethod"
            },
            "enum": {
              "type": "object",
              "description": "An object describing enum structure.",
              "$ref": "#/$defs/enumObject"
            }
          }
        }
      }
    },
    "enumObject": {
      "type": "object",
      "description": "An object describing enum structure.",
      "required": [
        "name",
        "values"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Enum's name.",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Enum's description for documentation."
        },
        "values": {
          "type": "array",
          "description": "Enum's entries.",
          "items": {
            "type": "object",
            "description": "Value's information.",
            "required": [
              "name",
              "value"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Enum's value name.",
                "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                "minLength": 1
              },
              "description": {
                "type": "string",
                "description": "Enum's value description for documentation."
              },
              "value": {
                "type": "integer",
                "description": "An integer representing the value of the enum element."
              }
            }
          }
        }
      }
    }
  }
}